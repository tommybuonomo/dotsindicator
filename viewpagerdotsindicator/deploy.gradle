apply plugin: 'maven-publish'
apply plugin: 'com.android.library'


// Define project properties
ext {
  groupId = 'com.tbuonomo.andrui' // package name of the project
  artifactId = "viewpagerdotsindicator" // module name of the library
  libVersion = "3.0.3"
}

version = libVersion
group = groupId

// Reference to properties file for credentials
def propsFile = rootProject.file('viewpagerdotsindicator/keystore.properties')

// Task to create a sources JAR
task sourcesJar(type: Jar) {
  archiveClassifier.set('sources')
  from android.sourceSets.main.java.srcDirs
}

// Task to create a Javadoc
task javadoc(type: Javadoc) {
  source = android.sourceSets.main.java.srcDirs
  classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

// Task to create a Javadoc JAR
task javadocJar(type: Jar, dependsOn: javadoc) {
  archiveClassifier.set('javadoc')
  from javadoc.destinationDir
}

// Publishing configuration
publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.release // Include the release component

      // Define coordinates
      groupId = groupId
      artifactId = artifactId
      version = libVersion

      // Attach artifacts
      artifact(sourcesJar)
      artifact(javadocJar)

      // POM configuration
      pom {
        name.set(artifactId)
        description.set("Dots Indicator for ViewPager")
        url.set('https://github.com/tommybuonomo/dotsindicator')

        licenses {
          license {
            name.set("The Apache License, Version 2.0")
            url.set("http://www.apache.org/licenses/LICENSE-2.0.txt")
          }
        }

        scm {
          url.set("https://github.com/tommybuonomo/dotsindicator")
          connection.set("scm:git:git://github.com/tommybuonomo/dotsindicator.git")
          developerConnection.set("scm:git:ssh://github.com/tommybuonomo/dotsindicator.git")
        }

        developers {
          developer {
            id.set("tommybuonomo")
            name.set("Tommy Buonomo")
          }
        }
      }
    }
  }

  // Repository configuration
  repositories {
    if (propsFile.exists()) {
      def props = new Properties()
      props.load(new FileInputStream(propsFile))

      maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/USERNAME/REPOSITORY")
        credentials {
          username = props.getProperty("githubUsername")
          password = props.getProperty("githubToken")
        }
      }
    }
  }
}

// Define artifacts to include
artifacts {
  archives sourcesJar
  archives javadocJar
}
